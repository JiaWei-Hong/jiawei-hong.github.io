let vm = new Vue({    el:'#app',    data:{        itemObject:{            mode:0,            modeText:"Time to work!",            isStart:false,            calcTimer:null,            currentTime:1500,        },        css:{            width: '100%',            height: '100%',            background: 'rgb(240,91,86)',            position: 'fixed',            marginTop:'-8px',            marginLeft:'-8px',            padding:'25px',            textAlign: 'center',            color:'white',        }    },    methods:{        changeMode(mode){            this.itemObject.mode = mode;            this.itemObject.currentTime = this.changeCurrentTime();            this.itemObject.modeText = this.itemObject.mode === 0 ? "Time to work!" : "Time for a break";            this.itemObject.isStart = false;            this.css.background = this.changeColor();            clearInterval(this.itemObject.calcTimer);        },        changeColor(){            let color = ['rgb(240,91,86)','rgb(76,166,169)','rgb(73,143,193)'];            return color[this.itemObject.mode];        },        changeCurrentTime(){            let modesTime = [1500,300,900];            return modesTime[this.itemObject.mode];        },        buttonSwitch(){            this.itemObject.isStart = !this.itemObject.isStart;            if(this.itemObject.isStart){                this.itemObject.calcTimer = setInterval(()=>{                    if(this.itemObject.currentTime === 0){                        let alarmUrl = 'electronic.mp3';                        let audio = new Audio(alarmUrl);                        audio.play().then(() => {                            audio.addEventListener('ended',() => {                                let mode = this.itemObject.mode === 0 ? 1 : 0;                                this.itemObject.isStart = false;                                this.changeMode(mode);                                this.changeColor();                                this.changeCurrentTime();                            });                        });                        clearInterval(this.itemObject.calcTimer);                    }else if(this.itemObject.currentTime > 0){                        this.itemObject.currentTime -=1;                    }                },1000);            }else{                clearInterval(this.itemObject.calcTimer);            }        }    },    computed:{        time(){            let currentTime = parseInt(this.itemObject.currentTime);            let minutes = parseInt(currentTime / 60).toString().padStart(2,'0');            let seconds = parseInt(currentTime % 60).toString().padStart(2,'0');            return `${minutes}:${seconds}`;        }    }});